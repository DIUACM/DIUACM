name: Build, Test & Deploy to cPanel

on:
  push:
    branches: [ laravel-rewrite ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, dom, fileinfo, mysql, zip, gd, curl, bcmath, xml, json, openssl, tokenizer
        coverage: none

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Copy .env.example to .env
      run: cp .env.example .env

    - name: Configure environment for testing
      run: |
        echo "APP_ENV=testing" >> .env
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=laravel_test" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=password" >> .env

    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-dev --optimize-autoloader --no-interaction

    - name: Install NPM dependencies
      run: npm ci

    - name: Generate application key
      run: php artisan key:generate

    - name: Build frontend assets
      run: npm run build

    - name: Run Laravel Pint (Code Style)
      run: vendor/bin/pint --test

    - name: Run ESLint
      run: npm run lint

    - name: Run Prettier check
      run: npm run format:check

    - name: Run TypeScript check
      run: npm run types

    - name: Create SQLite database for testing
      run: touch database/testing.sqlite

    - name: Run database migrations
      run: php artisan migrate --force --env=testing

    - name: Run Pest tests
      run: php artisan test --env=testing

    - name: Prepare deployment files
      run: |
        # Remove development files and directories
        rm -rf node_modules
        rm -rf tests
        rm -rf .git
        rm -rf .github
        rm -f .env.example
        rm -f .gitignore
        rm -f .gitattributes
        rm -f phpunit.xml
        rm -f package.json
        rm -f package-lock.json
        rm -f vite.config.ts
        rm -f tsconfig.json
        rm -f eslint.config.js
        rm -f composer.lock
        rm -rf storage/logs/*
        rm -rf storage/framework/cache/*
        rm -rf storage/framework/sessions/*
        rm -rf storage/framework/views/*
        rm -f .env
        
        # Set proper permissions
        chmod -R 755 storage bootstrap/cache
        chmod -R 775 storage/app storage/framework storage/logs

    - name: Deploy to cPanel via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        protocol: ftp
        port: 21
        local-dir: ./
        server-dir: /bdix.diuqbank.com/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/tests/**
          **/.github/**
          **/storage/logs/**
          **/storage/framework/cache/**
          **/storage/framework/sessions/**
          **/storage/framework/views/**