name: Deploy to Production

# Run this workflow on every push to the main branch
on:
  push:
    branches:
      - laravel-rewrite

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest

    # These environment variables are used in the script below
    env:
      APP_DOMAIN: diuacm.com # <-- IMPORTANT: Change this
      DEPLOY_PATH: /var/www/diuacm.com # <-- IMPORTANT: Change this

    steps:
      # 1. Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Setup SSH connection
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 3. Deploy to Server
      - name: Deploy
      
        env:
          SSH_USER: ${{ secrets.SSH_USER }} # e.g., 'deployer'
          SSH_HOST: ${{ secrets.SSH_HOST }} # e.g., your droplet IP
        run: |
          # Create a release timestamp
          RELEASE_NAME=$(date +%Y%m%d%H%M%S)
          RELEASE_PATH=$DEPLOY_PATH/releases/$RELEASE_NAME

          echo "ðŸš€ Starting deployment..."

          # Create the new release directory on the server
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "mkdir -p $RELEASE_PATH"

          # Use rsync to copy files, excluding git/github specific files
          rsync -avz --exclude='.git' --exclude='.github' ./ $SSH_USER@$SSH_HOST:$RELEASE_PATH/

          # Run deployment commands on the server
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << EOF
            set -e
            echo "ðŸ”¥ Running deployment scripts on server..."
            cd $RELEASE_PATH

            # Set the correct ownership for storage and cache directories
            echo "Setting ownership..."
            sudo chown -R sourov:www-data $RELEASE_PATH/storage $RELEASE_PATH/bootstrap/cache

            # Set the correct permissions
            echo "Setting permissions..."
            sudo chmod -R 775 $RELEASE_PATH/storage $RELEASE_PATH/bootstrap/cache

            # Symlink the .env file from the shared directory
            echo "Linking .env file..."
            ln -nfs $DEPLOY_PATH/shared/.env .env

            # Symlink the main storage directory for user uploads, etc.
            echo "Linking storage directory..."
            ln -nfs $DEPLOY_PATH/shared/storage public/storage

            # Install composer dependencies
            echo "Installing composer dependencies..."
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev

            # Run Laravel optimizations
            echo "Running Laravel optimizations..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # Run database migrations
            echo "Running database migrations..."
            php artisan migrate --force

            # Atomically switch the 'current' symlink to the new release
            echo "Activating new release..."
            ln -nfs $RELEASE_PATH $DEPLOY_PATH/current

            # Reload PHP-FPM to clear OPcache
            echo "Reloading PHP-FPM..."
            sudo service php8.3-fpm reload

            # Clean up old releases, keeping the last 5
            echo "Cleaning up old releases..."
            ls -dt $DEPLOY_PATH/releases/* | tail -n +6 | xargs rm -rf

            echo "âœ… Deployment complete!"
          EOF